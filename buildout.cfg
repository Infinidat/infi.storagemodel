[buildout]
include-site-packages = false
relative-paths = true
unzip = true
newest = false
download-cache = .cache
develop = . parts/instruct parts/hbaapi parts/asi parts/devicemanager parts/mpath parts/wmpio
parts = python-distribution setup.py __init__.py scripts
python = python-distribution

[project]
name = infi.storagemodel
namespace_packages = ['infi']
install_requires = ['distribute', 'Brownie', 'infi.instruct', 'infi.hbaapi', 'infi.asi', 'infi.devicemanager', 'infi.multipathtools', 'infi.wmpio', 'infi.pyutils', 'infi.dtypes.hctl', 'infi.dtypes.wwn', 'infi.mountoolinux', 'infi.parted', 'infi.sgutils', 'infi.diskmanagement', 'json_rest']
install_requires_windows = []
install_requires_linux = []
install_requires_macosx = []
version_file = src/infi/storagemodel/__version__.py
description = A high-level library for traversing the OS storage model.
long_description = A high-level cross-platform abstraction of the OS storage stack (LUNs, disks, volumes, etc).
console_scripts = ['devlist = infi.storagemodel.examples:devlist']

[python-distribution]
recipe = infi.recipe.python:download
executable = parts/python/bin/python
download-base = ftp://ci.xsignnet.local/workspace/python
version = v2.7.1-206-gb51a009

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__init__.py]
recipe = infi.recipe.template.version
output = ${project:version_file}
input = inline:
	__version__ = "${infi.recipe.template.version:version}"

[scripts]
recipe = zc.recipe.egg
relative-paths = true
unzip = true
dependent-scripts = true
eggs = ${project:name}
	ipython
	nose
	mock
	redgreen
	coverage
	nose-achievements
	infi.unittest
	sphinx
	snort
interpreter = python

[eclipse]
recipe = rbco.recipe.pyeclipse
project-name = ${project:name}
python-version = 2.7
project-directory = ${buildout:directory}

[pydev]
recipe = pb.recipes.pydev
eggs = ${scripts:eggs}

