[buildout]
include-site-packages = false
relative-paths = true
unzip = true
newest = false
download-cache = .cache
develop = .
parts = 

[project]
name = infi.storagemodel
homepage = https://github.com/Infinidat/${project:name}
namespace_packages = ['infi']
install_requires = ['infi.dtypes.hctl', 'infi.devicemanager', 'infi.traceback', 'infi.parted', 'infi.multipathtools', 'distribute', 'Brownie', 'infi.diskmanagement', 'infi.hbaapi', 'infi.wioctl', 'infi.instruct', 'infi.mountoolinux', 'daemon', 'infi.dtypes.wwn', 'infi.sgutils', 'infi.exceptools', 'infi.wmpio', 'infi.asi', 'infi.pyutils', 'infi.cwrap']
version_file = src/infi/storagemodel/__version__.py
description = A high-level library for traversing the OS storage model.
long_description = A high-level cross-platform abstraction of the OS storage stack (LUNs, disks, volumes, etc).
console_scripts = ['devlist = infi.storagemodel.examples:devlist', 'rescan_scsi_bus = infi.storagemodel.linux.rescan_scsi_bus:console_script']
gui_scripts = []
package_data = []
upgrade_code = None
product_name = ${project:name}
post_install_script_name = None
pre_uninstall_script_name = None

[isolated-python]
recipe = infi.recipe.python
version = v2.7.5.2

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__version__.py]
recipe = infi.recipe.template.version
output = ${project:version_file}
input = inline:
	__version__ = "${infi.recipe.template.version:version}"
	__git_commiter_name__ = "${infi.recipe.template.version:author}"
	__git_commiter_email__ = "${infi.recipe.template.version:author_email}"
	__git_branch__ = ${infi.recipe.template.version:git_local_branch}
	__git_remote_tracking_branch__ = ${infi.recipe.template.version:git_remote_tracking_branch}
	__git_remote_url__ = ${infi.recipe.template.version:git_remote_url}
	__git_head_hash__ = ${infi.recipe.template.version:head_hash}
	__git_head_subject__ = ${infi.recipe.template.version:head_subject}
	__git_head_message__ = ${infi.recipe.template.version:head_message}
	__git_dirty_diff__ = ${infi.recipe.template.version:dirty_diff}

[development-scripts]
dependent-scripts = true
recipe = infi.recipe.console_scripts
eggs = ${project:name}
	ipython
	nose
	mock
	coverage
	pylint
	infi.unittest
	infi.traceback
	Sphinx
	snort
interpreter = python

[eclipse]
recipe = rbco.recipe.pyeclipse
project-name = ${project:name}
project-directory = ${buildout:directory}
python-version = 2.7
source-resources = ${buildout:directory}/src

[pydev]
recipe = pb.recipes.pydev
eggs = ${development-scripts:eggs}

[pack]
recipe = infi.recipe.application_packager
company = None

[sublime]
recipe = corneti.recipes.codeintel
eggs = ${development-scripts:eggs}

